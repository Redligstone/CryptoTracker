{"version":3,"file":"static/js/450.d670914e.chunk.js","mappings":"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","sources":["config/data.js","components/SelectButton.js","components/CoinInfo.js","pages/coins.js"],"sourcesContent":["export const chartDays = [\r\n    {\r\n      label: \"24 Hours\",\r\n      value: 1,\r\n    },\r\n    {\r\n      label: \"30 Days\",\r\n      value: 30,\r\n    },\r\n    {\r\n      label: \"3 Months\",\r\n      value: 90,\r\n    },\r\n    {\r\n      label: \"1 Year\",\r\n      value: 365,\r\n    },\r\n  ];","import React from 'react'\r\n\r\nfunction SelectButton({children, selected, onClick}) {\r\n  return (\r\n    <span className={ selected ? 'chart__button-item-selected' : 'chart__button-item' } onClick={onClick}>{children}</span>\r\n  )\r\n}\r\n\r\nexport default SelectButton","import React, { useRef, useEffect, useState, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { HistoricalChart } from \"../config/api\";\r\nimport { CryptoState } from \"../cryptoContext\";\r\nimport {\r\n  CircularProgress,\r\n  ThemeProvider,\r\n  createTheme,\r\n} from \"@material-ui/core\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Chart from \"chart.js/auto\";\r\nimport { chartDays } from \"../config/data\";\r\nimport SelectButton from \"./SelectButton\";\r\n\r\nconst CoinInfo = ({ coin }) => {\r\n  const { currency } = CryptoState();\r\n\r\n  const [historicalData, setHistoricalData] = useState([]);\r\n  const [days, setDays] = useState(1);\r\n  const chartRef = useRef(null);\r\n\r\n  const FetchChart = async () => {\r\n    const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\r\n    setHistoricalData(data.prices);\r\n  };\r\n  useEffect(() => {\r\n    FetchChart();\r\n  }, [currency, days]);\r\n\r\n  const chartData = useMemo(() => {\r\n    const mappedData = historicalData.map((data) => {\r\n      let date = new Date(data[0]);\r\n      let time =\r\n        date.getHours() > 12\r\n          ? `${date.getHours() - 12}:${date.getMinutes()} PM`\r\n          : `${date.getHours()}:${date.getMinutes()} AM`;\r\n      return days === 1 ? time : date.toLocaleDateString();\r\n    });\r\n\r\n    return {\r\n      labels: mappedData,datasets: [\r\n        {\r\n          label: `Price (Past ${days} Days) in ${currency}`,\r\n          data: historicalData.map((data) => data[1]),\r\n          borderColor: \"#EEBC1D\",\r\n        },\r\n      ],\r\n    };\r\n  }, [currency, days, historicalData]);\r\n\r\n  const chartOptions = useMemo(() => {\r\n    return {\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            type: \"category\",\r\n            ticks: {\r\n              autoSkip: true,\r\n              maxTicksLimit: 20,\r\n              callback: function (value, index, values) {\r\n                return value.split(\" \")[0];\r\n              },\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      elements: {\r\n        point: {\r\n          radius: 2,\r\n        },\r\n      },\r\n    };\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    let chartInstance = null;\r\n    if (chartRef.current) {\r\n      if (chartRef.current.chart) {\r\n        chartRef.current.chart.destroy();\r\n      }\r\n      const ctx = chartRef.current.getContext(\"2d\");\r\n      chartInstance = new Chart(ctx, {\r\n        type: \"line\",\r\n        data: chartData,\r\n        options: chartOptions,\r\n      });\r\n    }\r\n    return () => {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n    };\r\n  }, [chartData, chartOptions]);\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#fff\",\r\n      },\r\n      type: \"dark\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <div className=\"chart__container\">\r\n        <>\r\n        {!historicalData.length ? (\r\n          <CircularProgress\r\n            style={{ color: \"gold\" }}\r\n            size={250}\r\n            thickness={1}\r\n          />\r\n        ) : (\r\n          <Line data={chartData} options={chartOptions} ref={chartRef} />\r\n        )}\r\n        </>\r\n        <div className=\"chart__buttons\">\r\n            {chartDays.map(day => \r\n            (\r\n                <SelectButton selected={day.value === days} key={day.value}  onClick={() => {setDays(day.value)}}>{day.label}</SelectButton>\r\n            ))}\r\n        </div>\r\n        \r\n\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default CoinInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CryptoState } from \"../cryptoContext\";\r\nimport axios from \"axios\";\r\nimport { SingleCoin } from \"../config/api\";\r\nimport CoinInfo from \"../components/CoinInfo\";\r\nimport { LinearProgress, Typography } from \"@material-ui/core\";\r\nimport { numberWithCommas } from \"../components/Banner/Carausel\";\r\n// import ReactHtmlParser from 'react-html-parser';\r\n\r\n// import ReactHtmlParser from 'react-html-parser'\r\n\r\n// import React from 'react';\r\n\r\nfunction HTMLRenderer({ html }) {\r\n  return <div dangerouslySetInnerHTML={{ __html: html }} />;\r\n}\r\n\r\n\r\nfunction CoinPage() {\r\n  const { id } = useParams();\r\n  const [coin, setCoin] = useState(\"\");\r\n  const { currency, symbol } = CryptoState();\r\n\r\n  const fetchCoin = async () => {\r\n    const { data } = await axios.get(SingleCoin(id));\r\n    setCoin(data);\r\n  };\r\n  useEffect(() => {\r\n    fetchCoin();\r\n  }, [id]);\r\n  console.log(coin)\r\n\r\n  if(!coin) return <LinearProgress style={{backgroundColor:\"gold\"}}/>\r\n  return (\r\n    <div className=\"coin__container\">\r\n      <div className=\"coin__sidebar\">\r\n        <img\r\n        src={coin?.image?.large}\r\n        alt={coin?.name}\r\n        height=\"200\"\r\n        style={{marginBottom:20}}\r\n        />\r\n        <Typography variant=\"h3\" className='coin__sidebar__title'>\r\n        {coin.name}\r\n        </Typography>\r\n        <Typography  className='coin__sidebar__description' >\r\n          \r\n        <span> {coin?.description?.en.split('.')[0]}.</span>\r\n        <span> {coin?.description?.en.split('.')[1]}.</span>\r\n        \r\n        </Typography>\r\n        <div className=\"coin__sidebar__data\">\r\n          <span style={{display:\"flex\"}}>\r\n            <Typography  variant=\"h5\" className='coin__sidebar__title'>Rank: {coin?.market_cap_rank}</Typography>\r\n          </span>\r\n          <span style={{display:\"flex\"}}>\r\n            <Typography  variant=\"h5\" className='coin__sidebar__title'>Current Price: {symbol}{''}{numberWithCommas(\r\n              coin?.market_data.current_price[currency.toLowerCase()]\r\n            )}</Typography>\r\n          </span>\r\n          <span style={{display:\"flex\"}}>\r\n            <Typography  variant=\"h5\" className='coin__sidebar__title'>Market Cap: {symbol}{''}{numberWithCommas(coin?.market_data?.market_cap[currency.toLowerCase()].toString().slice(0,-6))}M</Typography>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <CoinInfo coin={coin} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default CoinPage;\r\n"],"names":["chartDays","label","value","_ref","children","selected","onClick","_jsx","className","coin","currency","CryptoState","_useState","useState","_useState2","_slicedToArray","historicalData","setHistoricalData","_useState3","_useState4","days","setDays","chartRef","useRef","FetchChart","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","HistoricalChart","id","sent","prices","stop","apply","arguments","useEffect","chartData","useMemo","labels","map","date","Date","time","getHours","concat","getMinutes","toLocaleDateString","datasets","borderColor","chartOptions","scales","xAxes","type","ticks","autoSkip","maxTicksLimit","callback","index","values","split","beginAtZero","elements","point","radius","chartInstance","current","chart","destroy","ctx","getContext","Chart","options","darkTheme","createTheme","palette","primary","main","ThemeProvider","theme","_jsxs","_Fragment","length","Line","ref","CircularProgress","style","color","size","thickness","day","SelectButton","_coin$image","_coin$description","_coin$description2","_coin$market_data","useParams","setCoin","_CryptoState","symbol","fetchCoin","SingleCoin","console","log","src","image","large","alt","name","height","marginBottom","Typography","variant","description","en","display","market_cap_rank","numberWithCommas","market_data","current_price","toLowerCase","market_cap","toString","slice","CoinInfo","LinearProgress","backgroundColor"],"sourceRoot":""}